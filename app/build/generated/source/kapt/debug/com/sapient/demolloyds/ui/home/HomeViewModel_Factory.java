// Generated by Dagger (https://dagger.dev).
package com.sapient.demolloyds.ui.home;

import com.sapient.demolloyds.data.usecases.FetchPopularPhotosUsecase;
import com.sapient.demolloyds.data.usecases.SearchPhotosUsecase;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class HomeViewModel_Factory implements Factory<HomeViewModel> {
  private final Provider<FetchPopularPhotosUsecase> fetchPopularPhotosUsecaseProvider;

  private final Provider<SearchPhotosUsecase> searchPhotosUsecaseProvider;

  public HomeViewModel_Factory(
      Provider<FetchPopularPhotosUsecase> fetchPopularPhotosUsecaseProvider,
      Provider<SearchPhotosUsecase> searchPhotosUsecaseProvider) {
    this.fetchPopularPhotosUsecaseProvider = fetchPopularPhotosUsecaseProvider;
    this.searchPhotosUsecaseProvider = searchPhotosUsecaseProvider;
  }

  @Override
  public HomeViewModel get() {
    return newInstance(fetchPopularPhotosUsecaseProvider.get(), searchPhotosUsecaseProvider.get());
  }

  public static HomeViewModel_Factory create(
      Provider<FetchPopularPhotosUsecase> fetchPopularPhotosUsecaseProvider,
      Provider<SearchPhotosUsecase> searchPhotosUsecaseProvider) {
    return new HomeViewModel_Factory(fetchPopularPhotosUsecaseProvider, searchPhotosUsecaseProvider);
  }

  public static HomeViewModel newInstance(FetchPopularPhotosUsecase fetchPopularPhotosUsecase,
      SearchPhotosUsecase searchPhotosUsecase) {
    return new HomeViewModel(fetchPopularPhotosUsecase, searchPhotosUsecase);
  }
}
